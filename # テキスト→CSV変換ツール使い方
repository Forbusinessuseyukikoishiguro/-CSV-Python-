# テキスト→CSV変換ツール使い方

様々な形式のテキストデータを簡単にCSVファイルに変換できるGUIツールです。直感的な操作で、プログラミング知識がなくても使用できます。

##あなたへ
VSCODEで適当に配置すると、変換ツールが表示されるので、変換したいテキストファイルを指定して、実行してください。CSVファイル変換されます！

PS C:\hogehoge\desktop\20250322Pythonpra> py 20250808csvhenkan.py       

```
┌─────────────────────────────────────────────────────────────┐
│ テキスト→CSV変換ツール                                        │
├─────────────────────────────────────────────────────────────┤
│ ファイル選択                                                  │
│ 入力ファイル: [sample.txt           ] [参照]                 │
│ 出力ファイル: [output.csv           ] [参照]                 │
├─────────────────────────────────────────────────────────────┤
│ 変換設定                                                      │
│ 解析モード: [Auto ▼] エンコーディング: [UTF-8 ▼]            │
│ ヘッダー: 名前,年齢,職業                                     │
├─────────────────────────────────────────────────────────────┤
│ プレビュー                              [プレビュー更新]      │
│ [1行目] 田中太郎,30,エンジニア                               │
│ [2行目] 佐藤花子,25,デザイナー                               │
│ ...                                                          │
├─────────────────────────────────────────────────────────────┤
│ [変換実行] [クリア] [サンプル読込]                           │
│ ステータス: 準備完了                                          │
└─────────────────────────────────────────────────────────────┘
```

## 🚀 クイックスタート（30秒で開始）

1. **ダウンロード**: `text_to_csv_gui.py` をダウンロード
2. **実行**: ファイルをダブルクリックまたはコマンドで実行
3. **テスト**: 「サンプル読込」→「プレビュー更新」→「変換実行」

## 📋 必要環境

### 必須要件
- **Python 3.7以上**
- **tkinter** (通常Pythonに標準で含まれています)

### 確認方法
```bash
python --version    # Python 3.7+ が表示されればOK
python -c "import tkinter"  # エラーが出なければOK
```

## 🔧 インストール・実行方法

### 方法1: 直接実行（推奨）
```bash
# ファイルダウンロード後
python text_to_csv_gui.py
```

### 方法2: ダブルクリック実行
1. `text_to_csv_gui.py` を右クリック
2. 「プログラムから開く」→「Python」を選択
3. ツールが起動

### 方法3: 実行ファイル化（上級者向け）
```bash
# PyInstallerを使用
pip install pyinstaller
pyinstaller --onefile --windowed text_to_csv_gui.py

# 実行ファイルが dist/ フォルダに生成される
```

## 📚 使い方ガイド

### 基本操作
1. **入力ファイル選択**: 「参照」ボタンでテキストファイルを選択
2. **解析モード選択**: データ形式に合ったモードを選択
3. **プレビュー確認**: 「プレビュー更新」で変換結果を確認
4. **CSV出力**: 「変換実行」でCSVファイルを生成

### 5つの解析モード

#### 🔸 Auto（自動検出）
- **用途**: 一般的な区切り形式のデータ
- **対応**: タブ、カンマ、複数スペース区切り
- **設定**: 不要（自動判定）

```
名前    年齢    職業
田中太郎  30    エンジニア
佐藤花子  25    デザイナー
```

#### 🔸 Structured（構造化データ）
- **用途**: 特定の区切り文字で分割されたデータ
- **設定**: 区切り文字を指定（例: `|`, `;`, `:`）

```
田中太郎|30|エンジニア
佐藤花子|25|デザイナー
```

#### 🔸 Key-Value（キー：値形式）
- **用途**: 設定ファイルやアンケート結果
- **対応**: `：`, `:`, `=`, タブ区切り

```
名前：田中太郎
年齢：30
職業：エンジニア
```

#### 🔸 Pattern（正規表現）
- **用途**: 複雑なパターンのデータ抽出
- **設定**: 正規表現パターンを指定

```
# パターン例: (\d{4}-\d{2}-\d{2}) \[(\w+)\] (.+)
2024-08-08 [INFO] システム開始
2024-08-08 [ERROR] エラー発生
```

#### 🔸 Fixed Width（固定幅）
- **用途**: 古いシステムの出力や帳票データ
- **設定**: 各列の文字数を指定（例: `10,5,15`）

```
田中太郎    30   エンジニア部
佐藤花子    25   デザイン部
```

## 📝 サンプルファイルでテスト

### 1. 簡単テスト（タブ区切り）
**ファイル名**: `test_tab.txt`
```
名前	年齢	職業
田中太郎	30	エンジニア
佐藤花子	25	デザイナー
山田次郎	35	営業
```
**設定**: 
- 解析モード: Auto
- ヘッダー: `名前,年齢,職業`

### 2. キー値テスト
**ファイル名**: `test_keyvalue.txt`
```
会社名：株式会社サンプル
設立年：2010年
従業員数：150人
```
**設定**:
- 解析モード: Key-Value
- ヘッダー: `項目,値`

### 3. ログファイルテスト
**ファイル名**: `test_log.txt`
```
2024-08-08 09:15:30 [INFO] システム開始
2024-08-08 09:16:12 [WARN] 警告メッセージ
2024-08-08 09:17:45 [ERROR] エラー発生
```
**設定**:
- 解析モード: Pattern
- 正規表現: `(\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}) \[(\w+)\] (.+)`
- ヘッダー: `日時,レベル,メッセージ`

## ⚙️ 詳細設定

### エンコーディング対応
- **UTF-8** (推奨): 日本語含む現代的なファイル
- **Shift_JIS**: Windows日本語ファイル
- **CP932**: Windows拡張Shift_JIS
- **EUC-JP**: Unix系日本語ファイル

### 正規表現パターン例

| データ形式 | 正規表現パターン | 説明 |
|------------|------------------|------|
| 日付付きログ | `(\d{4}-\d{2}-\d{2}) (.+)` | 日付と内容を分離 |
| メールアドレス | `(.+) <(.+@.+)>` | 名前とメールを抽出 |
| 価格情報 | `(.+) ¥([\d,]+)` | 商品名と価格を抽出 |
| ID付きデータ | `ID:(\d+) (.+)` | IDと内容を分離 |

## 🔧 トラブルシューティング

### よくある問題と解決法

#### ❌ 文字化けが発生する
**原因**: エンコーディングが間違っている
**解決**: エンコーディングを変更して再試行
- Windows: `shift_jis` または `cp932`
- Mac/Linux: `utf-8`

#### ❌ データが正しく分割されない
**原因**: 解析モードが適切でない
**解決**: 
1. プレビューで元データを確認
2. 適切な解析モードに変更
3. 必要に応じて区切り文字やパターンを調整

#### ❌ 正規表現エラー
**原因**: パターンの構文エラー
**解決**: 
- 括弧 `()` でグループ化しているか確認
- エスケープ文字 `\` が正しく使われているか確認
- オンライン正規表現テスターで事前確認

#### ❌ プレビューが空になる
**原因**: データにマッチするパターンがない
**解決**:
1. 解析モードを「Auto」に変更
2. 元ファイルの形式を再確認
3. 空行や特殊文字を削除

### エラーメッセージと対処法

| エラーメッセージ | 原因 | 対処法 |
|------------------|------|--------|
| `ファイルが見つかりません` | パスが間違っている | ファイルパスを再確認 |
| `エンコーディングエラー` | 文字コードが間違っている | エンコーディングを変更 |
| `正規表現エラー` | パターンが無効 | 正規表現を修正 |
| `列幅エラー` | 数値以外が入力されている | 数値のみで入力 |

## 💡 使用例・応用

### 実際の業務での活用例

#### 📊 売上データ整理
- **元データ**: Excelからコピーしたタブ区切りテキスト
- **用途**: 分析ツールで使用するCSV作成
- **設定**: Auto解析モード

#### 📝 アンケート結果処理
- **元データ**: Webフォームの出力テキスト
- **用途**: 回答データの集計・分析
- **設定**: Key-Value解析モード

#### 🔍 ログファイル分析
- **元データ**: サーバーログファイル
- **用途**: エラー分析とレポート作成
- **設定**: Pattern解析モード

#### 📋 レガシーシステム連携
- **元データ**: 固定幅の帳票出力
- **用途**: 新システムへのデータ移行
- **設定**: Fixed Width解析モード

## 🤝 コントリビューション

### バグ報告
問題が発生した場合は、以下の情報を含めて報告してください：
- OS環境（Windows 10, macOS Big Sur など）
- Pythonバージョン
- エラーメッセージ
- 入力データのサンプル（個人情報は除く）

### 機能要望
新機能のアイデアがある場合は、使用ケースと共に提案してください。

## 📄 ライセンス

MIT License - 商用・非商用問わず自由に使用できます。

## 🔗 関連ツール

### データ処理関連
- **Pandas**: Python データ分析ライブラリ
- **OpenRefine**: データクリーニングツール
- **CSV Validator**: CSVファイル検証ツール

### テキスト処理関連
- **正規表現テスター**: https://regex101.com/
- **文字コード変換**: nkf, iconv

## 📞 サポート

### よくある質問
**Q: 大きなファイルは処理できますか？**
A: はい。ただし、プレビューは最初の10行のみ表示されます。

**Q: ExcelファイルをCSVに変換できますか？**
A: いいえ。このツールはテキストファイル専用です。ExcelはCSV形式で保存してから使用してください。

**Q: 複数ファイルを一括処理できますか？**
A: 現在のバージョンは1ファイルずつの処理です。

### 更新履歴
- **v1.0.0**: 初期リリース
  - 5つの解析モード実装
  - GUIインターフェース
  - プレビュー機能

---

**🎉 これで、あなたも様々なテキストデータを簡単にCSVに変換できます！**

何か困ったことがあれば、サンプル読込から始めて、段階的に試してみてください。
